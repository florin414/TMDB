// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PopcornHub.Infrastructure.Context;

#nullable disable

namespace PopcornHub.Infrastructure.Migrations
{
    [DbContext(typeof(PopcornHubDbContext))]
    partial class PopcornHubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PopcornHub.Domain.Entities.MovieComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("PopcornHub.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BcryptCost")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PopcornHub.Domain.Entities.MovieComment", b =>
                {
                    b.HasOne("PopcornHub.Domain.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PopcornHub.Domain.ValueObjects.Comment", "Comment", b1 =>
                        {
                            b1.Property<int>("MovieCommentId")
                                .HasColumnType("integer");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Comment");

                            b1.HasKey("MovieCommentId");

                            b1.ToTable("Comments");

                            b1.WithOwner()
                                .HasForeignKey("MovieCommentId");
                        });

                    b.OwnsOne("PopcornHub.Domain.ValueObjects.MovieId", "MovieId", b1 =>
                        {
                            b1.Property<int>("MovieCommentId")
                                .HasColumnType("integer");

                            b1.Property<int>("Value")
                                .HasColumnType("integer")
                                .HasColumnName("MovieId");

                            b1.HasKey("MovieCommentId");

                            b1.ToTable("Comments");

                            b1.WithOwner()
                                .HasForeignKey("MovieCommentId");
                        });

                    b.Navigation("Comment")
                        .IsRequired();

                    b.Navigation("MovieId")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PopcornHub.Domain.Entities.User", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
